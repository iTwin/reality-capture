name: Publish Python SDK

on: workflow_dispatch

jobs:
  build_and_publish_sdk:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Create virtual env
      working-directory: .\python_sdk
      run: |
        python -m venv venv 

    - name: Build wheel
      working-directory: .\python_sdk
      run: |
        .\venv\Scripts\activate
        python -m pip install build
        python -m build

    - name: Find Wheel File
      id: find_wheel
      working-directory: .\python_sdk
      run: |
        $wheel = Get-ChildItem dist\*.whl | Select-Object -First 1
        echo "::set-output name=wheel::$($wheel.FullName)"
        echo "::set-output name=wheel_name::$($wheel.Name)"
      shell: pwsh

    - name: Install documentation dependencies
      working-directory: .\python_sdk
      run: |
        .\venv\Scripts\activate
        pip install .[dev]
        cd dist
        python -m pip install ${{ steps.find_wheel.outputs.wheel }}

    - name: Build documentation
      working-directory: .\python_sdk\docs
      shell: cmd
      run: |
        ..\venv\Scripts\activate.bat
        make.bat .\html

    - name: Create Pre-Release
      uses: actions/create-release@v1
      id: create_pre_release
      with:
        tag_name: 2.0.0-alpha.1
        release_name: "Version 2.0.0-alpha.1"
        draft: false
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload wheel
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_pre_release.outputs.upload_url }}
        asset_path: ${{ steps.find_wheel.outputs.wheel }}
        asset_name: ${{ steps.find_wheel.outputs.wheel_name }}
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Reformat doc
      id: reformat_doc
      working-directory: .\python_sdk\docs
      run: |
        Get-ChildItem -Path . -Recurse -File

        New-Item -Path .\ReadMe\en -ItemType Directory -Force
        Copy-Item -Path .\_build\html -Destination .\ReadMe\en\html5 -Recurse
        Compress-Archive -Path .\ReadMe -DestinationPath .\Documentation.zip
      shell: pwsh

    - name: Upload doc
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_pre_release.outputs.upload_url }}
        asset_path: .\python_sdk\docs\Documentation.zip
        asset_name: Documentation.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    
    

