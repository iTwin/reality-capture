name: Publish Python SDK

on: workflow_dispatch

jobs:
  build_and_publish_sdk:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Create virtual env
      working-directory: .\python_sdk
      run: |
        python -m venv venv

    - name: Build wheel
      working-directory: .\python_sdk
      run: |
        .\venv\Scripts\activate
        python -m pip install build
        python -m build

    - name: Find Wheel File
      id: find_wheel
      working-directory: .\python_sdk
      run: |
        $wheel = Get-ChildItem dist\*.whl | Select-Object -First 1
        Write-Host "Wheel Full Name: $($wheel.FullName)"
        Write-Host "Wheel Name: $($wheel.Name)"
        "wheel_full_name=$($wheel.FullName)" >> $env:GITHUB_OUTPUT
        "wheel_name=$($wheel.Name)" >> $env:GITHUB_OUTPUT
      shell: pwsh

    - name: Install documentation dependencies
      working-directory: .\python_sdk
      run: |
        .\venv\Scripts\Activate.ps1
        Write-Host "Wheel location: ${{ steps.find_wheel.outputs.wheel_full_name }}"
        python -m pip install ${{ steps.find_wheel.outputs.wheel_full_name }}
        Write-Host "Installing dev dependencies..."
        python -m pip install .[dev]
      shell: pwsh

    - name: Build documentation
      working-directory: .\python_sdk\docs
      shell: pwsh
      run: |
        ..\venv\Scripts\Activate.ps1
        & .\make.bat html

    - name: Reformat doc
      id: reformat_doc
      working-directory: .\python_sdk\docs
      run: |
        New-Item -Path ".\User Guide\en" -ItemType Directory -Force
        Copy-Item -Path .\_build\html -Destination ".\User Guide\en\html5" -Recurse
        Compress-Archive -Path ".\User Guide" -DestinationPath .\Documentation.zip
        $zip_abs_path = (Get-Item ".\Documentation.zip").FullName
        "doc_zip_path=$zip_abs_path" >> $env:GITHUB_OUTPUT
      shell: pwsh

    - name: Create virtual env for tests
      working-directory: .\python_sdk
      run: |
        python -m venv venv_tests
        .\venv_tests\Scripts\activate
        python -m pip install ${{ steps.find_wheel.outputs.wheel_full_name }}
        python -m pip install pytest
        python -m pip install pytest-cov
        python -m pip install responses

    - name: Run tests
      working-directory: .\python_sdk
      run: |
        .\venv_tests\Scripts\activate
        pytest --cov=reality_capture --cov-report html:cov_html .\tests\

    - name: get version from pyproject
      working-directory: .\python_sdk
      run: |
        .\venv_tests\Scripts\activate
        echo "VERSION=$(python -c \"import importlib.metadata; print(importlib.metadata.version('reality-capture'))\")" >> $GITHUB_ENV

    - name: Create Pre-Release
      uses: softprops/action-gh-release@v2
      id: create_pre_release
      with:
        tag_name: ${{VERSION}}
        name: "Version ${{VERSION}}"
        draft: true
        prerelease: true
        files: | 
          ${{ steps.find_wheel.outputs.wheel_full_name }}
          ${{ steps.reformat_doc.outputs.doc_zip_path }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
