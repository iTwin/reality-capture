name: Publish Typescript SDK Workflow

on: workflow_dispatch

jobs:
  build_and_test_sdk:
    strategy:
      matrix:
        node-version: [20.x, 22.x, 24.x]
        os: [windows-latest, ubuntu-latest, macos-latest]
      fail-fast: false

    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install --frozen-lockfile=true

      - name: Build
        working-directory: ./typescript_sdk/reality_capture
        run: npm run build

      # - name: Build doc

      - name: Run unit tests
        working-directory: ./typescript_sdk/reality_capture
        run: npm run coverage

      # Node 22 on Windows : publish pre release
      - name: Publish packages as tgz
        if: ${{ matrix.os == 'windows-latest' && startsWith(matrix.node-version, '22')}}
        working-directory: ./typescript_sdk/reality_capture
        run: npm pack --pack-destination ./lib

      - name: Get version
        id: get_version
        if: ${{ matrix.os == 'windows-latest' && startsWith(matrix.node-version, '22')}}
        working-directory: ./typescript_sdk/reality_capture
        shell: pwsh
        run: | 
          $packageVersion=(Get-Content .\package.json | ConvertFrom-Json).version
          Write-Output "version=$($packageVersion)" >> $Env:GITHUB_OUTPUT

      - name: Create Pre-Release
        if: ${{ matrix.os == 'windows-latest' && startsWith(matrix.node-version, '22')}}
        uses: softprops/action-gh-release@v2
        id: create_pre_release
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: "Version ${{ steps.get_version.outputs.version }}"
          draft: true
          prerelease: true
          files: | 
            ./typescript_sdk/reality_capture/lib/reality-capture-${{ steps.get_version.outputs.version }}.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
